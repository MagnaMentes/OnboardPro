# Generated by Django 5.2.1 on 2025-06-02 07:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('departments', '0002_add_manager_field'),
        ('feedback', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeedbackTrendRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('rule_type', models.CharField(choices=[('sentiment_drop', 'Sentiment Drop'), ('satisfaction_drop', 'Satisfaction Drop'), ('response_rate_drop', 'Response Rate Drop'), ('issue_frequency_rise', 'Issue Frequency Rise'), ('topic_shift', 'Topic Shift')], max_length=50, verbose_name='rule type')),
                ('threshold', models.FloatField(verbose_name='threshold')),
                ('measurement_period_days', models.IntegerField(default=7, verbose_name='measurement period days')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_trend_rules', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('departments', models.ManyToManyField(blank=True, related_name='feedback_trend_rules', to='departments.department', verbose_name='departments')),
                ('templates', models.ManyToManyField(blank=True, related_name='trend_rules', to='feedback.feedbacktemplate', verbose_name='templates')),
            ],
            options={
                'verbose_name': 'feedback trend rule',
                'verbose_name_plural': 'feedback trend rules',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackTrendAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20, verbose_name='severity')),
                ('previous_value', models.FloatField(blank=True, null=True, verbose_name='previous value')),
                ('current_value', models.FloatField(blank=True, null=True, verbose_name='current value')),
                ('percentage_change', models.FloatField(blank=True, null=True, verbose_name='percentage change')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='is resolved')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='resolved at')),
                ('resolution_comment', models.TextField(blank=True, verbose_name='resolution comment')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_trend_alerts', to='departments.department', verbose_name='department')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_trend_alerts', to=settings.AUTH_USER_MODEL, verbose_name='resolved by')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trend_alerts', to='feedback.feedbacktemplate', verbose_name='template')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='feedback.feedbacktrendrule', verbose_name='rule')),
            ],
            options={
                'verbose_name': 'feedback trend alert',
                'verbose_name_plural': 'feedback trend alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackTrendSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='date')),
                ('sentiment_score', models.FloatField(default=0.0, verbose_name='sentiment score')),
                ('response_count', models.IntegerField(default=0, verbose_name='response count')),
                ('main_topics', models.JSONField(default=dict, verbose_name='main topics')),
                ('common_issues', models.JSONField(default=dict, verbose_name='common issues')),
                ('satisfaction_index', models.FloatField(default=0.0, verbose_name='satisfaction index')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_trend_snapshots', to='departments.department', verbose_name='department')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trend_snapshots', to='feedback.feedbacktemplate', verbose_name='template')),
            ],
            options={
                'verbose_name': 'feedback trend snapshot',
                'verbose_name_plural': 'feedback trend snapshots',
                'ordering': ['-date'],
                'unique_together': {('template', 'department', 'date')},
            },
        ),
    ]
