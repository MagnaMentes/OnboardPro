openapi: 3.0.3
info:
  title: OnboardPro API
  version: 1.0.0
  description: API платформы для онбординга сотрудников
paths:
  /api/admin/ai/insights/:
    get:
      operationId: admin_ai_insights_list
      description: API для получения списка AI-инсайтов с фильтрацией по уровню риска.
      summary: Получение списка AI-инсайтов
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Ограничение количества записей
      - in: query
        name: risk_level
        schema:
          type: string
          enum:
          - high
          - medium
        description: Фильтр по уровню риска
      tags:
      - Admin Dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Список AI-инсайтов
        '401':
          description: Ошибка аутентификации
        '403':
          description: Недостаточно прав доступа
  /api/admin/onboarding/assignments/:
    get:
      operationId: admin_onboarding_assignments_list
      description: API для получения списка всех назначений с вложенной информацией
        о прогрессе.
      summary: Получение списка всех назначений
      parameters:
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - completed
        description: Фильтр по статусу назначения
      tags:
      - Admin Dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Список назначений с прогрессом
        '401':
          description: Ошибка аутентификации
        '403':
          description: Недостаточно прав доступа
  /api/admin/onboarding/feedbacks/:
    get:
      operationId: admin_onboarding_feedbacks_list
      description: API для получения списка последних отзывов с фильтрацией по тональности.
      summary: Получение списка отзывов
      parameters:
      - in: query
        name: auto_tag
        schema:
          type: string
          enum:
          - delay_warning
          - negative
          - neutral
          - positive
          - unclear_instruction
        description: Фильтр по автотегу
      - in: query
        name: limit
        schema:
          type: integer
        description: Ограничение количества записей
      - in: query
        name: sentiment
        schema:
          type: string
          enum:
          - negative
          - neutral
          - positive
        description: Фильтр по тональности отзыва
      tags:
      - Admin Dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Список отзывов
        '401':
          description: Ошибка аутентификации
        '403':
          description: Недостаточно прав доступа
  /api/admin/users/users/:
    get:
      operationId: admin_users_users_list
      description: API для получения списка всех пользователей с возможностью фильтрации
        по роли, статусу и поиска по имени/email.
      summary: Получение списка всех пользователей
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
        description: Фильтр по статусу активности
      - in: query
        name: role
        schema:
          type: string
          enum:
          - admin
          - employee
          - hr
          - manager
        description: Фильтр по роли пользователя
      - in: query
        name: search
        schema:
          type: string
        description: Поиск по имени или email
      tags:
      - Admin Dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Список пользователей
        '401':
          description: Ошибка аутентификации
        '403':
          description: Недостаточно прав доступа
  /api/ai/assistant/insights/:
    get:
      operationId: ai_assistant_insights_list
      description: Представление для получения списка активных подсказок для текущего
        пользователя
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientAIInsight'
          description: ''
  /api/ai/assistant/insights/{id}/dismiss/:
    post:
      operationId: ai_assistant_insights_dismiss_create
      description: Отмечает подсказку как скрытую
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Подсказка успешно скрыта
        '404':
          description: Подсказка не найдена
  /api/ai/assistant/step/{id}/insight/:
    get:
      operationId: ai_assistant_step_insight_retrieve
      description: Получить или сгенерировать AI-подсказку для шага онбординга
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id
        schema:
          type: integer
        description: ID шага программы онбординга
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает существующую подсказку (GET)
          description: ''
        '201':
          content:
            application/json:
              schema:
                description: Возвращает сгенерированную подсказку (POST)
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Подсказка не найдена или шаг не существует
          description: ''
    post:
      operationId: ai_assistant_step_insight_create
      description: Получить или сгенерировать AI-подсказку для шага онбординга
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id
        schema:
          type: integer
        description: ID шага программы онбординга
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает существующую подсказку (GET)
          description: ''
        '201':
          content:
            application/json:
              schema:
                description: Возвращает сгенерированную подсказку (POST)
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Подсказка не найдена или шаг не существует
          description: ''
  /api/ai/assistant/step/{step_id}/insight/:
    get:
      operationId: ai_assistant_step_insight_retrieve_2
      description: Генерирует подсказку для шага онбординга
      parameters:
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAIInsight'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAIInsight'
          description: ''
        '404':
          description: Шаг не найден или нет активного назначения
  /api/ai/insights/:
    get:
      operationId: ai_insights_list
      description: API для управления AI-инсайтами
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AIInsight'
          description: ''
  /api/ai/insights/{id}/:
    get:
      operationId: ai_insights_retrieve
      description: API для управления AI-инсайтами
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI insight.
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIInsight'
          description: ''
  /api/ai/insights/analyze/{assignment_id}/:
    post:
      operationId: ai_insights_analyze_create
      description: Ручной запуск анализа для конкретного назначения
      parameters:
      - in: path
        name: assignment_id
        schema:
          type: integer
        required: true
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIInsightRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIInsightRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIInsightRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIInsight'
          description: ''
  /api/ai/insights/user/{user_id}/:
    get:
      operationId: ai_insights_user_retrieve
      description: Получение инсайтов для конкретного пользователя
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIInsight'
          description: ''
  /api/ai/recommendations/:
    get:
      operationId: ai_recommendations_list
      description: |-
        API для управления AI-рекомендациями.
        Доступ только для HR и Admin.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AIRecommendation'
          description: ''
  /api/ai/recommendations/{id}/:
    get:
      operationId: ai_recommendations_retrieve
      description: |-
        API для управления AI-рекомендациями.
        Доступ только для HR и Admin.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI recommendation.
        required: true
      tags:
      - ai
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIRecommendation'
          description: ''
  /api/ai/recommendations/{id}/dismiss/:
    post:
      operationId: ai_recommendations_dismiss_create
      description: |-
        POST /api/recommendations/{id}/dismiss/
        Скрывает рекомендацию.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this AI recommendation.
        required: true
      tags:
      - ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIRecommendationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIRecommendationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIRecommendationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIRecommendation'
          description: ''
  /api/analytics/assignments/:
    get:
      operationId: analytics_assignments_retrieve
      description: API для получения таблицы всех назначений с прогрессом в процентах.
        Включает ФИО, должность, программу, статус, процент прогресса и дату начала.
      summary: Получение таблицы назначений с прогрессом
      tags:
      - Analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Таблица назначений с прогрессом
  /api/analytics/feedback-summary/:
    get:
      operationId: analytics_feedback_summary_retrieve
      description: API для получения сводки по настроениям пользователей за последние
        14 дней. Группирует отзывы по дням для построения графика.
      summary: Получение сводки по настроениям пользователей
      tags:
      - Analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Сводка по настроениям пользователей
  /api/analytics/summary/:
    get:
      operationId: analytics_summary_retrieve
      description: API для получения общей сводки по онбордингу. Включает количество
        сотрудников на онбординге, количество завершённых назначений, средний процент
        прогресса, статистику по фидбеку и тестам.
      summary: Получение общей сводки по онбордингу
      tags:
      - Analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Общая сводка по онбордингу
  /api/api/gamification/achievements/:
    get:
      operationId: api_gamification_achievements_list
      description: Представление для получения списка достижений пользователя
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReward'
          description: ''
  /api/api/gamification/events/:
    post:
      operationId: api_gamification_events_create
      description: Представление для отправки событий геймификации
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GamificationEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GamificationEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GamificationEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamificationEvent'
          description: ''
  /api/api/gamification/profile/:
    get:
      operationId: api_gamification_profile_retrieve
      description: Представление для получения профиля геймификации текущего пользователя
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLevel'
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: Кастомное представление для получения токенов JWT
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/booking/calendar/ical/:
    get:
      operationId: booking_calendar_ical_retrieve
      description: Экспортирует все встречи текущего пользователя в формате .ics (iCalendar)
      tags:
      - booking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/booking/slots/:
    get:
      operationId: booking_slots_list
      description: Представление для просмотра и создания виртуальных встреч
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - booking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMeetingSlot'
          description: ''
    post:
      operationId: booking_slots_create
      description: Представление для просмотра и создания виртуальных встреч
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMeetingSlotRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualMeetingSlotRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualMeetingSlotRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMeetingSlot'
          description: ''
  /api/booking/slots/{id}/:
    get:
      operationId: booking_slots_retrieve
      description: Представление для просмотра деталей и удаления виртуальной встречи
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - booking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMeetingSlot'
          description: ''
    delete:
      operationId: booking_slots_destroy
      description: Представление для просмотра деталей и удаления виртуальной встречи
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - booking
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/feedback/assignment/{id}/:
    get:
      operationId: feedback_assignment_retrieve
      description: |-
        Представление для получения всей обратной связи по конкретному назначению
        Доступно только для HR и ADMIN
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - feedback
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentFeedback'
          description: ''
  /api/feedback/mood/:
    post:
      operationId: feedback_mood_create
      description: |-
        Представление для создания записи о настроении (FeedbackMood)
        Доступно всем авторизованным пользователям
      tags:
      - feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackMoodRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedbackMoodRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedbackMoodRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackMood'
          description: ''
  /api/feedback/step/:
    post:
      operationId: feedback_step_create
      description: |-
        Представление для создания отзыва о шаге (StepFeedback)
        Доступно всем авторизованным пользователям
      tags:
      - feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepFeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StepFeedbackRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StepFeedbackRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepFeedback'
          description: ''
  /api/health/:
    get:
      operationId: health_retrieve
      description: API endpoint для проверки статуса работы сервера.
      tags:
      - health
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/lms/module/{step_id}/:
    get:
      operationId: lms_module_list
      description: Представление для получения списка обучающих модулей для шага онбординга
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      tags:
      - lms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LMSModule'
          description: ''
  /api/lms/test/{step_id}/:
    get:
      operationId: lms_test_retrieve
      description: Представление для получения теста для шага онбординга
      parameters:
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      tags:
      - lms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LMSTest'
          description: ''
  /api/lms/test/{step_id}/result/:
    get:
      operationId: lms_test_result_retrieve
      description: Представление для получения результата прохождения теста пользователем
      parameters:
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      tags:
      - lms
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LMSUserTestResult'
          description: ''
  /api/lms/test/{step_id}/submit/:
    post:
      operationId: lms_test_submit_create
      description: Обработка отправки ответов на тест
      parameters:
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      tags:
      - lms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSubmitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestSubmitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestSubmitRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSubmit'
          description: ''
  /api/notifications/:
    get:
      operationId: notifications_list
      description: |-
        ViewSet для работы с уведомлениями пользователя.

        Поддерживаемые операции:
        - GET /api/notifications/ - получение списка своих уведомлений с фильтрацией
        - GET /api/notifications/{id}/ - получение деталей одного уведомления
        - POST /api/notifications/{id}/read/ - отметка уведомления как прочитанное
        - POST /api/notifications/read-all/ - отметка всех уведомлений как прочитанные
        - DELETE /api/notifications/{id}/ - удаление уведомления
        - GET /api/notifications/settings/ - получение настроек уведомлений
        - POST /api/notifications/settings/ - обновление настроек уведомлений
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
    post:
      operationId: notifications_create
      description: |-
        ViewSet для работы с уведомлениями пользователя.

        Поддерживаемые операции:
        - GET /api/notifications/ - получение списка своих уведомлений с фильтрацией
        - GET /api/notifications/{id}/ - получение деталей одного уведомления
        - POST /api/notifications/{id}/read/ - отметка уведомления как прочитанное
        - POST /api/notifications/read-all/ - отметка всех уведомлений как прочитанные
        - DELETE /api/notifications/{id}/ - удаление уведомления
        - GET /api/notifications/settings/ - получение настроек уведомлений
        - POST /api/notifications/settings/ - обновление настроек уведомлений
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: |-
        ViewSet для работы с уведомлениями пользователя.

        Поддерживаемые операции:
        - GET /api/notifications/ - получение списка своих уведомлений с фильтрацией
        - GET /api/notifications/{id}/ - получение деталей одного уведомления
        - POST /api/notifications/{id}/read/ - отметка уведомления как прочитанное
        - POST /api/notifications/read-all/ - отметка всех уведомлений как прочитанные
        - DELETE /api/notifications/{id}/ - удаление уведомления
        - GET /api/notifications/settings/ - получение настроек уведомлений
        - POST /api/notifications/settings/ - обновление настроек уведомлений
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_destroy
      description: |-
        ViewSet для работы с уведомлениями пользователя.

        Поддерживаемые операции:
        - GET /api/notifications/ - получение списка своих уведомлений с фильтрацией
        - GET /api/notifications/{id}/ - получение деталей одного уведомления
        - POST /api/notifications/{id}/read/ - отметка уведомления как прочитанное
        - POST /api/notifications/read-all/ - отметка всех уведомлений как прочитанные
        - DELETE /api/notifications/{id}/ - удаление уведомления
        - GET /api/notifications/settings/ - получение настроек уведомлений
        - POST /api/notifications/settings/ - обновление настроек уведомлений
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/{id}/read/:
    post:
      operationId: notifications_read_create
      description: Отметка уведомления как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Уведомление отмечено как прочитанное
        '404':
          description: Уведомление не найдено
  /api/notifications/read_all/:
    post:
      operationId: notifications_read_all_create
      description: Отметка всех уведомлений как прочитанные
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Все уведомления отмечены как прочитанные
  /api/notifications/settings/:
    post:
      operationId: notifications_settings_create
      description: Обновление настроек уведомлений пользователя
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationSettingsRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: Настройки обновлены
        '400':
          description: Ошибка валидации
  /api/onboarding/assignments/{id}/progress/:
    get:
      operationId: onboarding_assignments_progress_retrieve
      description: Доступно пользователю, которому назначена программа, или HR/Admin.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramProgress'
          description: ''
  /api/onboarding/assignments/my/:
    get:
      operationId: onboarding_assignments_my_list
      description: Представление для получения списка назначений текущего пользователя
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOnboardingAssignment'
          description: ''
  /api/onboarding/programs/:
    get:
      operationId: onboarding_programs_list
      description: Представление для получения списка и создания онбординг-программ
      parameters:
      - in: query
        name: author_id
        schema:
          type: integer
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnboardingProgram'
          description: ''
    post:
      operationId: onboarding_programs_create
      description: Представление для получения списка и создания онбординг-программ
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnboardingProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnboardingProgramRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingProgram'
          description: ''
  /api/onboarding/programs/{id}/:
    get:
      operationId: onboarding_programs_retrieve
      description: Представление для получения, обновления и удаления онбординг-программы
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingProgram'
          description: ''
    put:
      operationId: onboarding_programs_update
      description: Представление для получения, обновления и удаления онбординг-программы
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnboardingProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnboardingProgramRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingProgram'
          description: ''
    patch:
      operationId: onboarding_programs_partial_update
      description: Представление для получения, обновления и удаления онбординг-программы
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOnboardingProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOnboardingProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOnboardingProgramRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingProgram'
          description: ''
    delete:
      operationId: onboarding_programs_destroy
      description: Представление для получения, обновления и удаления онбординг-программы
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/onboarding/programs/{id}/assign/:
    post:
      operationId: onboarding_programs_assign_create
      description: |-
        Представление для назначения программы пользователю
        Доступно только для HR и Admin
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProgramRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignProgramRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssignProgramRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignProgram'
          description: ''
  /api/onboarding/programs/{program_id}/steps/:
    get:
      operationId: onboarding_programs_steps_list
      description: Представление для получения списка и создания шагов онбординга
        для программы
      parameters:
      - in: query
        name: is_required
        schema:
          type: boolean
      - in: query
        name: is_virtual_meeting
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: program_id
        schema:
          type: integer
        required: true
      - in: query
        name: program_id
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: step_type
        schema:
          type: string
          enum:
          - meeting
          - task
          - training
        description: |-
          * `task` - Task
          * `meeting` - Meeting
          * `training` - Training
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnboardingStep'
          description: ''
    post:
      operationId: onboarding_programs_steps_create
      description: Представление для получения списка и создания шагов онбординга
        для программы
      parameters:
      - in: path
        name: program_id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnboardingStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnboardingStepRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingStep'
          description: ''
  /api/onboarding/steps/{id}/complete/:
    post:
      operationId: onboarding_steps_complete_create
      description: Представление для отметки шага как выполненного
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompleteStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompleteStepRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteStep'
          description: ''
  /api/onboarding/steps/progress/:
    get:
      operationId: onboarding_steps_progress_list
      description: Представление для получения списка прогресса по шагам онбординга
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - onboarding
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserStepProgress'
          description: ''
  /api/reports/assignments/csv/:
    get:
      operationId: reports_assignments_csv_retrieve
      description: Представление для генерации отчета о назначенных программах в формате
        CSV
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/reports/assignments/pdf/:
    get:
      operationId: reports_assignments_pdf_retrieve
      description: Представление для генерации отчета о назначенных программах в формате
        PDF
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/solomia/chat/{step_id}/:
    get:
      operationId: solomia_chat_retrieve
      description: Получить историю чата или отправить новое сообщение в чат с AI-ассистентом
        для шага онбординга
      parameters:
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      - in: query
        name: step_id
        schema:
          type: integer
        description: ID шага пользователя
        required: true
      tags:
      - solomia
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает историю сообщений чата (GET) или подтверждение
                  сохранения сообщения (POST)
              examples:
                ИсторияЧата:
                  value:
                    messages:
                    - id: 1
                      role: human
                      message: Привет, как мне выполнить этот шаг?
                      created_at: '2025-05-20T14:30:00Z'
                    - id: 2
                      role: assistant
                      message: Привет! Для выполнения этого шага рекомендую...
                      created_at: '2025-05-20T14:30:05Z'
                  summary: История чата
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Шаг не существует или не принадлежит пользователю
          description: ''
    post:
      operationId: solomia_chat_create
      description: Получить историю чата или отправить новое сообщение в чат с AI-ассистентом
        для шага онбординга
      parameters:
      - in: path
        name: step_id
        schema:
          type: integer
        required: true
      - in: query
        name: step_id
        schema:
          type: integer
        description: ID шага пользователя
        required: true
      tags:
      - solomia
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает историю сообщений чата (GET) или подтверждение
                  сохранения сообщения (POST)
              examples:
                ИсторияЧата:
                  value:
                    messages:
                    - id: 1
                      role: human
                      message: Привет, как мне выполнить этот шаг?
                      created_at: '2025-05-20T14:30:00Z'
                    - id: 2
                      role: assistant
                      message: Привет! Для выполнения этого шага рекомендую...
                      created_at: '2025-05-20T14:30:05Z'
                  summary: История чата
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Шаг не существует или не принадлежит пользователю
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      description: Представление для получения данных текущего пользователя
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AIInsight:
      type: object
      description: Сериализатор для AI-инсайтов
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        user_email:
          type: string
          format: email
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        assignment:
          type: integer
        program_name:
          type: string
          readOnly: true
        risk_level:
          $ref: '#/components/schemas/RiskLevelEnum'
        risk_level_display:
          type: string
          readOnly: true
        reason:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - created_at
      - id
      - program_name
      - reason
      - risk_level
      - risk_level_display
      - user
      - user_email
      - user_full_name
    AIInsightRequest:
      type: object
      description: Сериализатор для AI-инсайтов
      properties:
        user:
          type: integer
        assignment:
          type: integer
        risk_level:
          $ref: '#/components/schemas/RiskLevelEnum'
        reason:
          type: string
          minLength: 1
      required:
      - assignment
      - reason
      - risk_level
      - user
    AIRecommendation:
      type: object
      description: Сериализатор для модели AI-рекомендаций
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_email:
          type: string
          format: email
          readOnly: true
        assignment:
          type: integer
          readOnly: true
        assignment_name:
          type: string
          readOnly: true
        step:
          type: integer
          readOnly: true
          nullable: true
        step_name:
          type: string
          readOnly: true
        recommendation_text:
          type: string
          readOnly: true
        generated_at:
          type: string
          format: date-time
          readOnly: true
        dismissed:
          type: boolean
      required:
      - assignment
      - assignment_name
      - generated_at
      - id
      - recommendation_text
      - step
      - step_name
      - user
      - user_email
    AIRecommendationRequest:
      type: object
      description: Сериализатор для модели AI-рекомендаций
      properties:
        dismissed:
          type: boolean
    AssignProgram:
      type: object
      description: Сериализатор для назначения программы пользователю
      properties:
        user_id:
          type: integer
      required:
      - user_id
    AssignProgramRequest:
      type: object
      description: Сериализатор для назначения программы пользователю
      properties:
        user_id:
          type: integer
      required:
      - user_id
    AssignmentFeedback:
      type: object
      description: Сериализатор для получения всей обратной связи по конкретному назначению
      properties:
        assignment_id:
          type: integer
        program_name:
          type: string
          readOnly: true
        user_email:
          type: string
          readOnly: true
        moods:
          type: string
          readOnly: true
        step_feedbacks:
          type: string
          readOnly: true
      required:
      - assignment_id
      - moods
      - program_name
      - step_feedbacks
      - user_email
    AutoTagEnum:
      enum:
      - positive
      - neutral
      - negative
      - unclear_instruction
      - delay_warning
      type: string
      description: |-
        * `positive` - Positive
        * `neutral` - Neutral
        * `negative` - Negative
        * `unclear_instruction` - Unclear Instruction
        * `delay_warning` - Delay Warning
    ClientAIInsight:
      type: object
      description: Сериализатор для AI-подсказок для клиентов
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        assignment:
          type: integer
          readOnly: true
        step:
          type: integer
          readOnly: true
        step_name:
          type: string
          readOnly: true
        program_name:
          type: string
          readOnly: true
        hint_text:
          type: string
          readOnly: true
        generated_at:
          type: string
          format: date-time
          readOnly: true
        dismissed:
          type: boolean
      required:
      - assignment
      - generated_at
      - hint_text
      - id
      - program_name
      - step
      - step_name
      - user
    CompleteStep:
      type: object
      description: Сериализатор для отметки шага как выполненного
      properties:
        user_id:
          type: integer
    CompleteStepRequest:
      type: object
      description: Сериализатор для отметки шага как выполненного
      properties:
        user_id:
          type: integer
    ContentTypeEnum:
      enum:
      - video
      - text
      - file
      type: string
      description: |-
        * `video` - Video
        * `text` - Text
        * `file` - File
    CustomTokenObtainPairRequest:
      type: object
      description: |-
        Кастомный сериализатор для получения JWT-токенов
        Добавляет дополнительную информацию о пользователе в токен
        и возвращает данные пользователя в ответе
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    EventTypeEnum:
      enum:
      - step_completed
      - feedback_submitted
      - test_completed
      - achievement_unlocked
      type: string
      description: |-
        * `step_completed` - step_completed
        * `feedback_submitted` - feedback_submitted
        * `test_completed` - test_completed
        * `achievement_unlocked` - achievement_unlocked
    FeedbackMood:
      type: object
      description: Сериализатор для модели настроения по назначению
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        user_email:
          type: string
          format: email
          readOnly: true
        assignment:
          type: integer
        assignment_program_name:
          type: string
          readOnly: true
        value:
          $ref: '#/components/schemas/ValueEnum'
        value_display:
          type: string
          readOnly: true
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - assignment_program_name
      - created_at
      - id
      - user
      - user_email
      - value
      - value_display
    FeedbackMoodRequest:
      type: object
      description: Сериализатор для модели настроения по назначению
      properties:
        user:
          type: integer
        assignment:
          type: integer
        value:
          $ref: '#/components/schemas/ValueEnum'
        comment:
          type: string
      required:
      - assignment
      - user
      - value
    GamificationEvent:
      type: object
      description: Сериализатор для событий геймификации
      properties:
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        metadata: {}
      required:
      - event_type
    GamificationEventRequest:
      type: object
      description: Сериализатор для событий геймификации
      properties:
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        metadata: {}
      required:
      - event_type
    LMSModule:
      type: object
      description: Сериализатор для модели обучающего модуля LMS
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        content:
          type: string
          description: URL видео, текстовое содержимое или путь к файлу
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        step:
          type: integer
          title: Onboarding step
        step_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - content_type
      - created_at
      - id
      - order
      - step
      - step_name
      - title
      - updated_at
    LMSOption:
      type: object
      description: Сериализатор для модели варианта ответа LMS
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          title: Option text
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - text
    LMSQuestion:
      type: object
      description: Сериализатор для модели вопроса теста LMS
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          title: Question text
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        options:
          type: array
          items:
            $ref: '#/components/schemas/LMSOption'
          readOnly: true
      required:
      - id
      - options
      - text
    LMSTest:
      type: object
      description: Сериализатор для модели теста LMS
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        step:
          type: integer
          title: Onboarding step
        step_name:
          type: string
          readOnly: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/LMSQuestion'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_completed:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - is_completed
      - questions
      - step
      - step_name
      - title
      - updated_at
    LMSUserTestResult:
      type: object
      description: Сериализатор для результата прохождения теста пользователем
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        test:
          type: integer
          readOnly: true
        test_title:
          type: string
          readOnly: true
        is_passed:
          type: boolean
          readOnly: true
        score:
          type: integer
          readOnly: true
        max_score:
          type: integer
          readOnly: true
        percentage:
          type: string
          readOnly: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - completed_at
      - id
      - is_passed
      - max_score
      - percentage
      - score
      - test
      - test_title
      - user
    Notification:
      type: object
      description: Сериализатор для модели уведомлений
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationTypeEnum'
          readOnly: true
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - message
      - notification_type
      - title
    NotificationRequest:
      type: object
      description: Сериализатор для модели уведомлений
      properties:
        is_read:
          type: boolean
    NotificationSettingsRequest:
      type: object
      description: Сериализатор для настроек уведомлений пользователя
      properties:
        info:
          type: boolean
          default: true
        warning:
          type: boolean
          default: true
        deadline:
          type: boolean
          default: true
        system:
          type: boolean
          default: true
    NotificationTypeEnum:
      enum:
      - info
      - warning
      - deadline
      - system
      type: string
      description: |-
        * `info` - Information
        * `warning` - Warning
        * `deadline` - Deadline
        * `system` - System
    NullEnum:
      enum:
      - null
    OnboardingProgram:
      type: object
      description: Сериализатор для модели онбординг-программы
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
          readOnly: true
        author_email:
          type: string
          format: email
          readOnly: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/OnboardingStep'
          readOnly: true
      required:
      - author
      - author_email
      - created_at
      - id
      - name
      - steps
    OnboardingProgramRequest:
      type: object
      description: Сериализатор для модели онбординг-программы
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
      required:
      - name
    OnboardingStep:
      type: object
      description: Сериализатор для модели шага онбординга
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        step_type:
          $ref: '#/components/schemas/StepTypeEnum'
        order:
          type: integer
          readOnly: true
        program:
          type: integer
          readOnly: true
        is_required:
          type: boolean
        is_virtual_meeting:
          type: boolean
        deadline_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of days to complete after assignment
      required:
      - id
      - name
      - order
      - program
    OnboardingStepRequest:
      type: object
      description: Сериализатор для модели шага онбординга
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        step_type:
          $ref: '#/components/schemas/StepTypeEnum'
        is_required:
          type: boolean
        is_virtual_meeting:
          type: boolean
        deadline_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of days to complete after assignment
      required:
      - name
    PatchedOnboardingProgramRequest:
      type: object
      description: Сериализатор для модели онбординг-программы
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
    ProgramProgress:
      type: object
      description: Сериализатор для отображения прогресса по программе
      properties:
        id:
          type: integer
          readOnly: true
        program:
          type: integer
        program_name:
          type: string
          readOnly: true
        assigned_at:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/Status340Enum'
        total_steps:
          type: string
          readOnly: true
        completed_steps:
          type: string
          readOnly: true
        progress_percentage:
          type: string
          readOnly: true
        steps_progress:
          type: string
          readOnly: true
      required:
      - completed_steps
      - id
      - program
      - program_name
      - progress_percentage
      - steps_progress
      - total_steps
    RewardTypeEnum:
      enum:
      - achievement
      - level
      - special
      type: string
      description: |-
        * `achievement` - Achievement
        * `level` - Level
        * `special` - Special
    RiskLevelEnum:
      enum:
      - low
      - medium
      - high
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
    RoleEnum:
      enum:
      - admin
      - hr
      - manager
      - employee
      type: string
      description: |-
        * `admin` - Administrator
        * `hr` - HR Manager
        * `manager` - Department Manager
        * `employee` - Employee
    Status340Enum:
      enum:
      - active
      - completed
      type: string
      description: |-
        * `active` - Active
        * `completed` - Completed
    StepFeedback:
      type: object
      description: Сериализатор для модели отзыва по конкретному шагу
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        user_email:
          type: string
          format: email
          readOnly: true
        step:
          type: integer
        step_name:
          type: string
          readOnly: true
        assignment:
          type: integer
        comment:
          type: string
        auto_tag:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AutoTagEnum'
          - $ref: '#/components/schemas/NullEnum'
        auto_tag_display:
          type: string
          readOnly: true
        sentiment_score:
          type: number
          format: double
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assignment
      - auto_tag
      - auto_tag_display
      - comment
      - created_at
      - id
      - sentiment_score
      - step
      - step_name
      - user
      - user_email
    StepFeedbackRequest:
      type: object
      description: Сериализатор для модели отзыва по конкретному шагу
      properties:
        user:
          type: integer
        step:
          type: integer
        assignment:
          type: integer
        comment:
          type: string
          minLength: 1
      required:
      - assignment
      - comment
      - step
      - user
    StepTypeEnum:
      enum:
      - task
      - meeting
      - training
      type: string
      description: |-
        * `task` - Task
        * `meeting` - Meeting
        * `training` - Training
    TestSubmit:
      type: object
      description: Сериализатор для отправки ответов на тест
      properties:
        answers:
          type: array
          items:
            type: object
            additionalProperties:
              type: integer
      required:
      - answers
    TestSubmitRequest:
      type: object
      description: Сериализатор для отправки ответов на тест
      properties:
        answers:
          type: array
          items:
            type: object
            additionalProperties:
              type: integer
      required:
      - answers
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    User:
      type: object
      description: Сериализатор для модели пользователя
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        full_name:
          type: string
          maxLength: 255
        position:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - username
    UserLevel:
      type: object
      description: Сериализатор для модели UserLevel
      properties:
        level:
          type: integer
          readOnly: true
        points:
          type: integer
          readOnly: true
        points_to_next_level:
          type: string
          readOnly: true
      required:
      - level
      - points
      - points_to_next_level
    UserOnboardingAssignment:
      type: object
      description: Сериализатор для модели назначения онбординг-программы пользователю
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        user_email:
          type: string
          format: email
          readOnly: true
        program:
          type: integer
        program_name:
          type: string
          readOnly: true
        assigned_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/Status340Enum'
      required:
      - assigned_at
      - id
      - program
      - program_name
      - user
      - user_email
    UserReward:
      type: object
      description: Сериализатор для модели UserReward
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        icon:
          type: string
          readOnly: true
          nullable: true
        reward_type:
          allOf:
          - $ref: '#/components/schemas/RewardTypeEnum'
          readOnly: true
        awarded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - awarded_at
      - description
      - icon
      - id
      - reward_type
      - title
    UserStepProgress:
      type: object
      description: Сериализатор для модели прогресса пользователя по шагам
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        step:
          type: integer
        step_name:
          type: string
          readOnly: true
        step_type:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/UserStepProgressStatusEnum'
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        planned_date_start:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Planned start date
        planned_date_end:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Planned end date
        actual_completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Actual completion date
      required:
      - actual_completed_at
      - completed_at
      - id
      - planned_date_end
      - planned_date_start
      - step
      - step_name
      - step_type
      - user
    UserStepProgressStatusEnum:
      enum:
      - not_started
      - in_progress
      - done
      type: string
      description: |-
        * `not_started` - Not Started
        * `in_progress` - In Progress
        * `done` - Done
    ValueEnum:
      enum:
      - great
      - good
      - neutral
      - bad
      - terrible
      type: string
      description: |-
        * `great` - Great
        * `good` - Good
        * `neutral` - Neutral
        * `bad` - Bad
        * `terrible` - Terrible
    VirtualMeetingSlot:
      type: object
      description: Сериализатор для модели виртуальных встреч
      properties:
        id:
          type: integer
          readOnly: true
        step:
          type: integer
        step_name:
          type: string
          readOnly: true
        step_type:
          type: string
          readOnly: true
        assigned_user:
          type: integer
        assigned_user_email:
          type: string
          format: email
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        meeting_link:
          type: string
          format: uri
          maxLength: 200
      required:
      - assigned_user
      - assigned_user_email
      - end_time
      - id
      - start_time
      - step
      - step_name
      - step_type
    VirtualMeetingSlotRequest:
      type: object
      description: Сериализатор для модели виртуальных встреч
      properties:
        step:
          type: integer
        assigned_user:
          type: integer
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        meeting_link:
          type: string
          format: uri
          maxLength: 200
      required:
      - assigned_user
      - end_time
      - start_time
      - step
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
