# Generated by Django 5.2.1 on 2025-05-22 15:01

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(default=1, verbose_name='level')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='points')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gamification_level', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user level',
                'verbose_name_plural': 'user levels',
            },
        ),
        migrations.CreateModel(
            name='UserReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_id', models.CharField(default='legacy_achievement', max_length=50, verbose_name='achievement ID')),
                ('name', models.CharField(default='Legacy Achievement', max_length=255, verbose_name='name')),
                ('description', models.TextField(default='Achievement description not available', verbose_name='description')),
                ('reward_type', models.CharField(choices=[('achievement', 'Achievement'), ('level', 'Level'), ('special', 'Special')], default='achievement', max_length=20, verbose_name='reward type')),
                ('awarded_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='awarded at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user reward',
                'verbose_name_plural': 'user rewards',
                'ordering': ['-awarded_at'],
                'unique_together': {('user', 'achievement_id')},
            },
        ),
    ]
